[server]

log.level                   = debug
log.tid.enable              = true

daemon                      = false
module                      = ./test_module
debug                       = true

tcp.manual_open				= false;

tcp.accept.concurrent       = 10000
tcp.accept.send_buf         = 8388608
tcp.accept.recv_buf         = 8388608
tcp.accept.backlog          = 511
tcp.accept.thread_count     = 1

tcp.in.concurrent           = 10000
tcp.in.thread_count         = 10
tcp.in.recv_buf.init        = 256
tcp.in.recv_buf.max         = 10485760


# 1) 正常情况下，应该将 worker.disabled 设为 true，这会达到服务器的最高性能；  
# 2) 但如果下行数据要做流控，如多媒体数据等，将  worker.disabled 设为  
#    false 让发送在单独的线程，不会让发送的流控阻塞数据包接收和处理。  

tcp.out.disabled            = true
tcp.out.concurrent          = 10000
tcp.out.thread_count        = 1

udp.in.concurrent			= 10000
udp.in.thread_count         = 1

udp.send_buf                = 8388608
udp.recv_buf                = 8388608
udp.out.concurrent			= 10000
udp.out.thread_count        = 1

# 1) 如果处理数据包比请求来包速度快而且处理速度平均，应该将 worker.disabled
#    设为 true，在 tcp_in 线程里直接处理请求，这会达到服务器的最高性能。  
# 2) 但如果数据包处理速度慢或者处理速度不平均，将  worker.disabled 设为  
#    false 比较合适。这会在 worker 线程处理请求，而 tcp_in 线程在处理请求  
#    时可以继续接收后续的数据包。该场景下，在处理速度比请求来包速度稍微慢  
#    一点儿点儿，而有极少量积压请求时，性能最高。  
# TODO: 2013-10-26 10:28 对 2), 如何方便用户把程序调试成性能最高的情况？  
#                        估计要支持多个tcp_in往一个worker里压包才可以...

worker.disabled             = true
worker.thread_count         = 1

backend.thread_count        = 1

response.buff_align         = 1024

library.class_max           = 100
library.core                = ./library

[listen]
0 = tcp://0.0.0.0:8000
#1 = udp://0.0.0.0:8000
